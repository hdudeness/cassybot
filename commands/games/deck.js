class Deck {
    constructor() {
        this.deck = [];
        this.reset();
    }

    reset() {
        this.deck = [];
        const cards = ['<:acec:567400777996435457>', '<:aced:567400777887514627>', '<:aceh:567400778101162015>', '<:aces:567400778441031681>', 
                       '<:2c:567400704457572363>', '<:2d:567400704323485718>', '<:2h:567400704809893900>', '<:2s:567400704310771713>',
                       '<:3c:567400692357267466>', '<:3d:567400692252409856>', '<:3h:567400692478771309>', '<:3s:567400692407599124>',
                       '<:4c:567400679216381965>', '<:4d:567400679510114326>', '<:4h:567400679287554079>', '<:4s:567400679543668765>',
                       '<:5c:567400664741707786>', '<:5d:567400664653889540>', '<:5h:567400664750227466>', '<:5s:567400664410619935>',
                       '<:6c:567400651408015390>', '<:6d:567400651626119191>', '<:6h:567400651391500304>', '<:6s:567400651320066060>',
                       '<:7c:567400636417835008>', '<:7d:567400636434612234>', '<:7h:567400636862431292>', '<:7s:567400636962832480>',
                       '<:8c:567400620517228554>', '<:8d:567400620529680384>', '<:8h:567400620798246914>', '<:8s:567415974756876325>',
                       '<:9c:567400576632094740>', '<:9d:567400584139898896>', '<:9h:567400595741212672>', '<:9s:567400607066095617>',
                       '<:tenc:567400530847072256>', '<:tend:567400539772420096>', '<:tenh:567400547854843919>', '<:tens:567400556264685568>',
                       '<:jc:567400490707714068>', '<:jd:567400499293323264>', '<:jh:567400507686256700>', '<:js:567400516598890496>',
                       '<:qc:567400449091567618>', '<:qd:567400458839261224>', '<:qh:567400467072679965>', '<:qs:567400474572095548>',
                       '<:kc:567400415721947136>', '<:kd:567400426417160201>', '<:kh:567400434147393536>', '<:ks:567400441206538261>'];

        for (let card in cards) {
            this.deck.push(`${cards[card]}`);
        }
    }

    shuffle() {
        const { deck } = this;
        let x = deck.length, i;
        while (x) {
            i = Math.floor(Math.random() * x--);
            [deck[x], deck[i]] = [deck[i], deck[x]]
        }
        return this;
    }

    deal() {
        return this.deck.pop();
    }

}
let cardDeck = new Deck();

exports.deal = function(){
    return cardDeck.deal();
}

exports.shuffle = function(){
    return cardDeck.shuffle();
}

exports.newDeck = function(userid){
    return new Deck();
}
